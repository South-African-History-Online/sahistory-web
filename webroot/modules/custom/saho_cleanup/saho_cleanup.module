<?php

/**
 * @file
 * Install, update and uninstall functions for the saho_cleanup module.
 */

use Drupal\Core\Entity\EntityDefinitionUpdateManagerInterface;

/**
 * Post-update: Remove leftover add_to_cart fields that reference missing plugins.
 */
function saho_cleanup_post_update_remove_add_to_cart_fields(&$sandbox) {
  $manager = \Drupal::entityDefinitionUpdateManager();

  // Uninstall 'add_to_cart' if it exists.
  if ($definition = $manager->getFieldStorageDefinition('add_to_cart', 'node')) {
    $manager->uninstallFieldStorageDefinition($definition);
  }

  // Uninstall 'add_to_cart_price' if it exists.
  if ($definition = $manager->getFieldStorageDefinition('add_to_cart_price', 'node')) {
    $manager->uninstallFieldStorageDefinition($definition);
  }
}

/**
 * Delete old custom blocks of specified block types.
 */
function saho_cleanup_update_10001() {
  $block_types_to_delete = [
    'drag_and_drop_block',
    'history_in_pictures',
    'spacer',
    'tdih',
  ];

  $storage = \Drupal::entityTypeManager()->getStorage('block_content');

  foreach ($block_types_to_delete as $block_type) {
    $ids = \Drupal::entityQuery('block_content')
    ->condition('type', $block_type)
    ->accessCheck(FALSE)
    ->execute();  

    if (!empty($ids)) {
      $blocks = $storage->loadMultiple($ids);
      $storage->delete($blocks);

      \Drupal::messenger()->addStatus(t(
        'Deleted @count blocks of type "@type".',
        [
          '@count' => count($blocks),
          '@type' => $block_type,
        ]
      ));
    }
  }
}
