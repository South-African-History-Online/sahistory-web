<?php

/**
 * @file
 * SAHO Performance module for optimizing site performance.
 */

use Drupal\Core\Asset\AttachedAssetsInterface;

/**
 * Implements hook_page_attachments_alter().
 */
function saho_performance_page_attachments_alter(array &$page) {
  // Add critical CSS inline for above-the-fold content
  $critical_css = _saho_performance_get_critical_css();
  if ($critical_css) {
    $page['#attached']['html_head'][] = [
      [
        '#type' => 'html_tag',
        '#tag' => 'style',
        '#value' => $critical_css,
        '#attributes' => [
          'id' => 'critical-css',
        ],
      ],
      'critical_css',
    ];
  }

  // Add preload hints for critical resources
  _saho_performance_add_preload_hints($page);

  // Add resource hints for faster connections
  _saho_performance_add_resource_hints($page);
}

/**
 * Implements hook_css_alter().
 */
function saho_performance_css_alter(&$css, AttachedAssetsInterface $assets) {
  // Get current route to determine what CSS is actually needed
  $route_match = \Drupal::routeMatch();
  $route_name = $route_match->getRouteName();

  // Defer non-critical CSS files based on page type
  foreach ($css as $key => &$item) {
    // Always keep critical CSS files
    $critical_files = [
      'core/themes/stable9/css/system/components/ajax-progress.module.css',
      'core/themes/stable9/css/system/components/align.module.css',
      'core/themes/stable9/css/system/components/autocomplete-loading.module.css',
      'themes/custom/saho/build/css/main.style.css',
      'themes/contrib/radix/assets/css/radix.style.css',
    ];

    // CSS files that are only needed on specific pages
    $conditional_css = [
      'modules/custom/saho_tools/css/citation.css' => ['entity.node.canonical'],
      'modules/custom/saho_tools/css/citation-modern.css' => ['entity.node.canonical'],
      'modules/custom/saho_tools/css/sharing-modern.css' => ['entity.node.canonical'],
      'modules/custom/saho_utils/hero_banner/css/hero-banner-modern.css' => ['system.front_page'],
    ];

    // Check if this CSS is critical for current page
    $is_critical = FALSE;
    foreach ($critical_files as $critical) {
      if (strpos($key, $critical) !== FALSE) {
        $is_critical = TRUE;
        break;
      }
    }

    // Check if this CSS is needed for current route
    $is_needed = TRUE;
    foreach ($conditional_css as $css_file => $routes) {
      if (strpos($key, $css_file) !== FALSE && !in_array($route_name, $routes)) {
        $is_needed = FALSE;
        break;
      }
    }

    // Remove CSS not needed for this page
    if (!$is_needed) {
      unset($css[$key]);
      continue;
    }

    // Defer non-critical CSS that is still needed
    if (!$is_critical && isset($item['type']) && $item['type'] === 'file') {
      if (!isset($item['attributes']['media']) || $item['attributes']['media'] === 'all') {
        $item['attributes']['media'] = 'print';
        $item['attributes']['onload'] = "this.media='all'";
      }
    }
  }
}

/**
 * Implements hook_js_alter().
 */
function saho_performance_js_alter(&$javascript, AttachedAssetsInterface $assets) {
  // Add defer attribute to non-critical JavaScript
  foreach ($javascript as $key => &$item) {
    // Skip critical scripts
    $critical_scripts = [
      'core/assets/vendor/modernizr/modernizr.min.js',
      'core/misc/drupal.js',
      'core/misc/drupalSettingsLoader.js',
    ];

    if (!in_array($key, $critical_scripts) && !empty($item['type']) && $item['type'] === 'file') {
      // Add defer attribute
      $item['attributes']['defer'] = TRUE;
    }
  }
}

/**
 * Get critical CSS for inline insertion.
 */
function _saho_performance_get_critical_css() {
  // Get current route to customize critical CSS
  $route_match = \Drupal::routeMatch();
  $route_name = $route_match->getRouteName();

  // Base critical CSS for all pages
  $critical_css = '
    /* Critical CSS for SAHO - Above the fold styles */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: "Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
      font-size: 16px;
      line-height: 1.6;
      color: #1e293b;
      background-color: #ffffff;
    }

    .visually-hidden {
      position: absolute !important;
      clip: rect(1px, 1px, 1px, 1px);
      overflow: hidden;
      height: 1px;
      width: 1px;
    }

    .container {
      width: 100%;
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 15px;
    }

    header {
      background-color: #990000;
      color: white;
      min-height: 60px;
    }

    .navbar {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 1rem 0;
    }

    .navbar-brand {
      font-size: 1.5rem;
      font-weight: 700;
      text-decoration: none;
      color: white;
    }

    .navbar-nav {
      display: flex;
      list-style: none;
      gap: 1rem;
    }

    .nav-link {
      color: white;
      text-decoration: none;
      padding: 0.5rem 1rem;
    }

    main {
      min-height: calc(100vh - 120px);
      padding: 2rem 0;
    }

    h1, h2, h3 {
      font-weight: 700;
      line-height: 1.3;
      margin-bottom: 1rem;
      color: #1e293b;
    }

    h1 { font-size: 2.5rem; }
    h2 { font-size: 2rem; }
    h3 { font-size: 1.75rem; }

    p { margin-bottom: 1.25rem; }
    a { color: #990000; }
    img { max-width: 100%; height: auto; }
  ';

  // Add page-specific critical CSS
  if ($route_name === 'system.front_page') {
    $critical_css .= '
      .hero-banner {
        position: relative;
        width: 100%;
        min-height: 320px;
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        margin: 0;
        padding: 2rem 0;
      }
      .hero-banner__overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.45);
        z-index: 1;
      }
      .hero-banner__content {
        position: relative;
        z-index: 2;
        text-align: center;
        padding: 2rem;
        max-width: 700px;
        margin: 0 auto;
      }
      .hero-banner__inner {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 0.75rem;
      }
      .hero-banner__title {
        font-size: 2.5rem;
        font-weight: 600;
        color: #ffffff !important;
        margin: 0 0 0.5rem 0;
        line-height: 1.2;
        letter-spacing: -0.5px;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
      }
      .hero-banner__title--white {
        color: #ffffff !important;
        font-weight: 600 !important;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7) !important;
      }
      .hero-banner__title--red {
        color: #990000 !important;
        font-weight: 600 !important;
        text-shadow: 1px 1px 3px rgba(255, 255, 255, 0.5) !important;
      }
      .hero-banner__title--gold {
        color: #b88a2e !important;
        font-weight: 600 !important;
        text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5) !important;
      }
      .hero-banner__title--green {
        color: #2e7d32 !important;
        font-weight: 600 !important;
        text-shadow: 1px 1px 3px rgba(255, 255, 255, 0.4) !important;
      }
      .hero-banner__subtitle {
        font-size: 1.125rem;
        color: #ffffff !important;
        margin: 0 0 0.5rem 0;
        font-weight: 400;
        line-height: 1.5;
        opacity: 0.95;
      }
      .hero-banner__body {
        font-size: 0.9375rem;
        color: rgba(255, 255, 255, 0.9) !important;
        margin: 0 0 1.25rem 0;
        line-height: 1.6;
        max-width: 500px;
      }
      .hero-banner__body * {
        color: rgba(255, 255, 255, 0.9) !important;
      }
      .hero-banner__body p {
        margin: 0 0 0.5rem 0;
        color: rgba(255, 255, 255, 0.9) !important;
      }
      .hero-banner__body p:last-child {
        margin-bottom: 0;
      }
      .hero-banner__body strong {
        font-weight: 600;
        color: rgba(255, 255, 255, 1) !important;
      }
      .hero-banner__body em {
        font-style: italic;
      }
      .hero-banner__body a {
        color: #ffffff !important;
        text-decoration: underline;
      }
      .hero-banner__body ul, .hero-banner__body ol {
        text-align: left;
        margin: 0.5rem 0;
        padding-left: 1.5rem;
      }
      .hero-banner__body li {
        margin-bottom: 0.25rem;
        color: rgba(255, 255, 255, 0.9) !important;
      }
      .hero-banner__cta {
        margin-top: 1rem;
      }
      .hero-banner__button {
        display: inline-block;
        padding: 0.625rem 1.875rem;
        background: #990000;
        color: #ffffff !important;
        font-size: 0.875rem;
        font-weight: 600;
        text-decoration: none;
        border: 2px solid #990000;
        border-radius: 25px;
        transition: all 0.3s ease;
        letter-spacing: 0.025em;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }
      .hero-banner__button:hover {
        background: #ffffff !important;
        color: #990000 !important;
        border-color: #990000 !important;
        text-decoration: none !important;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        transform: translateY(-1px);
      }
      .hero-banner__cta a {
        display: inline-block;
        padding: 0.625rem 1.875rem !important;
        background: #990000 !important;
        color: #ffffff !important;
        font-size: 0.875rem;
        font-weight: 600;
        text-decoration: none !important;
        border: 2px solid #990000 !important;
        border-radius: 25px !important;
        transition: all 0.3s ease;
        letter-spacing: 0.025em;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }
      .hero-banner__cta a:hover {
        background: #ffffff !important;
        color: #990000 !important;
        border-color: #990000 !important;
        text-decoration: none !important;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        transform: translateY(-1px);
      }
    ';
  }

  // Add common inline block styles for rich text content
  $critical_css .= '
    .text-formatted, .field--type-text-long, .field--type-text-with-summary {
      line-height: 1.6;
    }
    .text-formatted p, .field--type-text-long p, .field--type-text-with-summary p {
      margin-bottom: 1rem;
    }
    .text-formatted strong, .field--type-text-long strong, .field--type-text-with-summary strong {
      font-weight: 600;
    }
    .text-formatted em, .field--type-text-long em, .field--type-text-with-summary em {
      font-style: italic;
    }
    .text-formatted ul, .text-formatted ol, .field--type-text-long ul, .field--type-text-long ol {
      margin: 1rem 0;
      padding-left: 1.5rem;
    }
    .text-formatted li, .field--type-text-long li {
      margin-bottom: 0.5rem;
    }
    .text-formatted a, .field--type-text-long a {
      color: #990000;
      text-decoration: underline;
    }
    .text-formatted h2, .text-formatted h3, .text-formatted h4 {
      margin-top: 1.5rem;
      margin-bottom: 0.75rem;
    }
    .text-formatted blockquote, .field--type-text-long blockquote {
      border-left: 4px solid #990000;
      padding-left: 1rem;
      margin: 1.5rem 0;
      font-style: italic;
      color: #666;
    }
  ';

  // Mobile responsive styles (always include)
  $critical_css .= '
    @media (max-width: 768px) {
      .navbar-nav { display: none; }
      h1 { font-size: 2rem; }
      h2 { font-size: 1.5rem; }
      .container { padding: 0 10px; }';

  // Add mobile hero banner styles if on front page
  if ($route_name === 'system.front_page') {
    $critical_css .= '
      .hero-banner {
        min-height: 280px;
        padding: 1.5rem 0;
      }
      .hero-banner__content {
        padding: 1.5rem;
      }
      .hero-banner__title {
        font-size: 1.875rem;
        margin-bottom: 0.375rem;
      }
      .hero-banner__subtitle {
        font-size: 1rem;
        margin-bottom: 0.375rem;
      }
      .hero-banner__body {
        font-size: 0.875rem;
        margin-bottom: 1rem;
      }
      .hero-banner__button, .hero-banner__cta a {
        padding: 0.4375rem 1.25rem;
        font-size: 0.75rem;
      }';
  }

  $critical_css .= '
    }
  ';

  // Minify the CSS aggressively
  $critical_css = preg_replace('/\s+/', ' ', $critical_css);
  $critical_css = preg_replace('/\/\*.*?\*\//', '', $critical_css);
  $critical_css = preg_replace('/\s*([{}:;,])\s*/', '$1', $critical_css);
  $critical_css = str_replace(';}', '}', $critical_css);

  return trim($critical_css);
}

/**
 * Add preload hints for critical resources.
 */
function _saho_performance_add_preload_hints(array &$page) {
  // Preload self-hosted Inter fonts
  $fonts = [
    '/themes/custom/saho/fonts/inter/Inter-Regular.woff2',
    '/themes/custom/saho/fonts/inter/Inter-Medium.woff2',
    '/themes/custom/saho/fonts/inter/Inter-Bold.woff2',
  ];

  foreach ($fonts as $font) {
    $page['#attached']['html_head'][] = [
      [
        '#type' => 'html_tag',
        '#tag' => 'link',
        '#attributes' => [
          'rel' => 'preload',
          'href' => $font,
          'as' => 'font',
          'type' => 'font/woff2',
          'crossorigin' => 'anonymous',
        ],
      ],
      'font_preload_' . basename($font),
    ];
  }

  // Preload critical CSS files
  $critical_css_files = [
    '/themes/custom/saho/build/css/main.style.css',
  ];

  foreach ($critical_css_files as $css_file) {
    $page['#attached']['html_head'][] = [
      [
        '#type' => 'html_tag',
        '#tag' => 'link',
        '#attributes' => [
          'rel' => 'preload',
          'href' => $css_file . '?v=' . time(),
          'as' => 'style',
        ],
      ],
      'css_preload_' . basename($css_file),
    ];
  }
}

/**
 * Add resource hints for faster connections.
 */
function _saho_performance_add_resource_hints(array &$page) {
  // Remove any external font preconnects that might be added by other modules
  if (isset($page['#attached']['html_head'])) {
    foreach ($page['#attached']['html_head'] as $key => $item) {
      if (isset($item[1]) && (
        strpos($item[1], 'google_fonts') !== FALSE ||
        strpos($item[1], 'gstatic') !== FALSE
      )) {
        unset($page['#attached']['html_head'][$key]);
      }
    }
  }

  // Only add preconnect for actually needed domains
  // Currently no external domains needed since fonts are self-hosted
}

/**
 * Implements hook_preprocess_html().
 */
function saho_performance_preprocess_html(&$variables) {
  $config = \Drupal::config('saho_performance.settings');

  // Add loading strategy for CSS
  $variables['#attached']['library'][] = 'saho_performance/css_loading';

  // Add dynamic CSS loader if enabled
  if ($config->get('enable_css_removal') !== FALSE) {
    $variables['#attached']['library'][] = 'saho_performance/dynamic_css_loader';
  }

  // Add performance monitoring script if enabled
  if ($config->get('enable_monitoring') !== FALSE) {
    $variables['#attached']['library'][] = 'saho_performance/performance_monitoring';
  }
}

/**
 * Implements hook_preprocess_block().
 */
function saho_performance_preprocess_block(&$variables) {
  // Optimize hero banner for LCP
  if (isset($variables['plugin_id']) && strpos($variables['plugin_id'], 'hero_banner') !== FALSE) {
    // Add preload for hero banner background image if exists
    if (!empty($variables['content']['#background_image'])) {
      $image_url = $variables['content']['#background_image'];
      $variables['#attached']['html_head'][] = [
        [
          '#type' => 'html_tag',
          '#tag' => 'link',
          '#attributes' => [
            'rel' => 'preload',
            'href' => $image_url,
            'as' => 'image',
            'fetchpriority' => 'high',
          ],
        ],
        'hero_banner_preload',
      ];
    }
  }
}