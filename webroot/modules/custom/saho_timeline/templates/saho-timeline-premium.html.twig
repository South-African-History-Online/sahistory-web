{#
/**
 * @file
 * Template for the premium SAHO timeline using TimelineJS3.
 *
 * Available variables:
 * - events: Array of timeline events.
 * - filters: Available filter options.
 * - attributes: HTML attributes for the wrapper.
 */
#}

<div{{ attributes.addClass('timeline-premium') }}>
  {# TimelineJS3 will be initialized here by JavaScript #}
</div>

{# Add a toggle to switch between timeline versions #}
<div class="timeline-version-selector">
  <label>Timeline View:</label>
  <div class="btn-group" role="group">
    <button type="button" class="btn btn-outline-primary timeline-switch" data-version="premium">
      Premium (TimelineJS)
    </button>
    <button type="button" class="btn btn-outline-primary timeline-switch" data-version="interactive">
      Interactive
    </button>
    <button type="button" class="btn btn-outline-primary timeline-switch" data-version="simple">
      Simple
    </button>
  </div>
</div>

<style>
.timeline-version-selector {
  text-align: center;
  margin: 2rem 0;
  padding: 1rem;
  background: rgba(245, 240, 229, 0.5);
  border-radius: 8px;
}

.timeline-version-selector label {
  font-weight: 600;
  color: #97212d;
  margin-right: 1rem;
}

.timeline-version-selector .btn-group {
  display: inline-flex;
  gap: 0.5rem;
}

.timeline-version-selector .btn {
  padding: 0.5rem 1.5rem;
  border: 2px solid #97212d;
  color: #97212d;
  background: white;
  border-radius: 6px;
  font-weight: 600;
  transition: all 0.3s ease;
  cursor: pointer;
}

.timeline-version-selector .btn:hover,
.timeline-version-selector .btn.active {
  background: #97212d;
  color: white;
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(151, 33, 45, 0.3);
}

.timeline-version-selector .btn.active {
  cursor: default;
  pointer-events: none;
}

@media (max-width: 768px) {
  .timeline-version-selector .btn-group {
    flex-direction: column;
    width: 100%;
    max-width: 300px;
    margin: 0 auto;
  }
  
  .timeline-version-selector .btn {
    width: 100%;
  }
}
</style>

<script>
// Timeline version switcher
(function() {
  document.addEventListener('DOMContentLoaded', function() {
    const switches = document.querySelectorAll('.timeline-switch');
    
    switches.forEach(function(btn) {
      btn.addEventListener('click', function() {
        const version = this.dataset.version;
        
        // Update active state
        switches.forEach(b => b.classList.remove('active'));
        this.classList.add('active');
        
        // Hide all timeline versions
        document.querySelectorAll('.timeline-premium, .timeline-interactive, .timeline-simple').forEach(function(el) {
          el.style.display = 'none';
        });
        
        // Show selected version
        const selectedTimeline = document.querySelector('.timeline-' + version);
        if (selectedTimeline) {
          selectedTimeline.style.display = 'block';
          
          // Trigger resize event for TimelineJS
          if (version === 'premium' && window.timeline) {
            setTimeout(function() {
              window.timeline.updateDisplay();
            }, 100);
          }
        }
      });
    });
    
    // Set premium as default active
    const premiumBtn = document.querySelector('[data-version="premium"]');
    if (premiumBtn) {
      premiumBtn.classList.add('active');
    }
  });
})();
</script>
