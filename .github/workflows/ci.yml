name: PR Build and Test

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  validate-composer:
    name: Validate Composer
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: [ '8.3' ]
        dependency-version: [ prefer-lowest, prefer-stable ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup PHP, with Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Validate Composer files
        run: |
          composer config --no-plugins allow-plugins.mglaman/composer-drupal-lenient true
          composer validate --strict composer.json
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

  php-coding-standards:
    name: PHP Coding Standards
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup PHP, with Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: |
          composer config --no-plugins allow-plugins.mglaman/composer-drupal-lenient true
          composer install --no-interaction --no-progress

      - name: Install PHPCS
        run: composer require squizlabs/php_codesniffer --dev

      - name: PHPCS
        run: ./vendor/bin/phpcs webroot/modules/custom webroot/themes/custom

  drupal-check:
    name: Drupal Best Practices
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup PHP, with Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          tools: composer:v2

      - name: Install Drupal Check
        run: composer require mglaman/drupal-check --dev

      - name: Run Drupal Best Practices Check
        run: ./vendor/bin/drupal-check webroot/modules/custom webroot/themes/custom
